local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local Window = Rayfield:CreateWindow({
   Name = "USR Hub - 1.0.0",
   Icon = 0,
   LoadingTitle = "Welcome To USR Hub",
   LoadingSubtitle = "by Abyssal Scripter Community",
   Theme = "Default",
   DisableRayfieldPrompts = true,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "USR Hub Folder",
      FileName = "USR Hub"
   },
   Discord = {
      Enabled = true,
      Invite = "dfU2w5PC",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "USR Hub Key System",
      Subtitle = "Key System",
      Note = "Join Discord And Open at Key Channel",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"Abyssal"}
   }
})

Rayfield:Notify({
   Title = "Welcome",
   Content = "Thanks Use Our Script Hub",
   Duration = 6.5,
   Image = 4567880251,
})

local device = "Unknown"
if UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then
    device = "Mobile"
elseif UserInputService.KeyboardEnabled and UserInputService.MouseEnabled then
    device = "PC/Laptop"
elseif UserInputService.GamepadEnabled then
    device = "Console"
end

local executor = "Unknown"
if syn then executor = "Synapse X"
elseif isexecutorclosure then executor = "ScriptWare"
elseif identifyexecutor then executor = identifyexecutor()
elseif KRNL_LOADED then executor = "KRNL"
elseif getexecutorname then executor = getexecutorname() end

Rayfield:Notify({
   Title = "Execute Use " .. executor,
   Content = "On " .. device,
   Duration = 6.5,
   Image = nil,
})

local CLTab = Window:CreateTab("# Changelogs", nil)
CLTab:CreateParagraph({Title = "# Changelogs", Content = '\n1.0.0 : !Script Created!\n1.0.5 : Fix bugs.'})
CLTab:CreateParagraph({Title = "# Info Wall", Content = "Join Discord https://discord.gg/dfU2w5PC\nBy : Abyssal0462\nGithub : https://github.com/Abyssal0462"})

local HomeTab = Window:CreateTab("üè† Home", nil)
local Paragraph = HomeTab:CreateParagraph({Title = "Coming Soon!", Content = "Coming Soon!"})
local TeleportTab = Window:CreateTab("üï≥ Teleport", nil)
local Paragraph = TeleportTab:CreateParagraph({Title = "Coming Soon!", Content = "Coming Soon!"})
local MiscTab = Window:CreateTab("üî• Misc - Risk", nil)

local Paragraph = MiscTab:CreateParagraph({Title = "# READ THIS", Content = "\n1. This script is still in beta development!\n\n# AT YOUR OWN RISK"})

MiscTab:CreateSlider({
   Name = "Walk Speed",
   Range = {1, 500},
   Increment = 10,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkSpeed",
   Callback = function(Value)
      local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
      local hum = char:FindFirstChildOfClass("Humanoid")
      if hum then hum.WalkSpeed = Value end
   end
})

MiscTab:CreateSlider({
   Name = "Jump Power",
   Range = {1, 500},
   Increment = 10,
   Suffix = "Power",
   CurrentValue = 50,
   Flag = "JumpPower",
   Callback = function(Value)
      local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
      local hum = char:FindFirstChildOfClass("Humanoid")
      if hum then hum.JumpPower = Value end
   end
})

local infJumpEnabled = false
local infJumpConn
MiscTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Flag = "InfJumpToggle",
   Callback = function(Value)
      infJumpEnabled = Value
      if infJumpEnabled then
         if infJumpConn then infJumpConn:Disconnect() end
         infJumpConn = UserInputService.JumpRequest:Connect(function()
            local char = LocalPlayer.Character
            local hum = char and char:FindFirstChildOfClass("Humanoid")
            if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
         end)
      else
         if infJumpConn then infJumpConn:Disconnect() infJumpConn = nil end
      end
   end
})

local noclipConn
MiscTab:CreateToggle({
   Name = "NoClip",
   CurrentValue = false,
   Flag = "NoClipToggle",
   Callback = function(Value)
      if Value then
         noclipConn = RunService.Stepped:Connect(function()
            local char = LocalPlayer.Character
            if char then
               for _, part in ipairs(char:GetDescendants()) do
                  if part:IsA("BasePart") then part.CanCollide = false end
               end
            end
         end)
      else
         if noclipConn then noclipConn:Disconnect() noclipConn = nil end
         local char = LocalPlayer.Character
         if char then
            for _, part in ipairs(char:GetDescendants()) do
               if part:IsA("BasePart") then part.CanCollide = true end
            end
         end
      end
   end
})

local ESP_Enabled = false
local Shape = "Box"
local LineColor = Color3.fromRGB(255, 0, 0)
local ShapeColor = Color3.fromRGB(0, 255, 0)
local drawings = {}

local function ClearDrawings()
   for _, tbl in pairs(drawings) do
      if tbl.Line then pcall(function() tbl.Line:Destroy() end) end
      if tbl.Shape then pcall(function() tbl.Shape:Destroy() end) end
   end
   drawings = {}
end

local function CreateDrawing(type, props)
   local draw = Drawing.new(type)
   for prop, val in pairs(props) do draw[prop] = val end
   return draw
end

RunService.RenderStepped:Connect(function()
   if not ESP_Enabled then return end
   ClearDrawings()
   for _, player in ipairs(Players:GetPlayers()) do
      if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
         local pos, onScreen = Camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
         if onScreen then
            local line = CreateDrawing("Line", {
               From = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y),
               To = Vector2.new(pos.X, pos.Y),
               Color = LineColor,
               Thickness = 1.5,
               Transparency = 1
            })
            local shape
            if Shape == "Box" then
               shape = CreateDrawing("Square", {
                  Size = Vector2.new(50, 50),
                  Position = Vector2.new(pos.X - 25, pos.Y - 25),
                  Color = ShapeColor,
                  Thickness = 1.5,
                  Transparency = 1,
                  Filled = false
               })
            end
            drawings[player] = {Line = line, Shape = shape}
         end
      end
   end
end)

MiscTab:CreateToggle({
   Name = "ESP Box + Tracer",
   CurrentValue = false,
   Flag = "ESPSystem",
   Callback = function(state)
      ESP_Enabled = state
      if not state then ClearDrawings() end
   end
})

MiscTab:CreateDropdown({
   Name = "ESP Shape",
   Options = {"Box"},
   CurrentOption = "Box",
   Callback = function(opt)
      Shape = opt
   end
})

MiscTab:CreateColorPicker({
   Name = "Tracer Line Color",
   Color = LineColor,
   Callback = function(color)
      LineColor = color
   end
})

MiscTab:CreateColorPicker({
   Name = "Shape Color",
   Color = ShapeColor,
   Callback = function(color)
      ShapeColor = color
   end
})

MiscTab:CreateButton({
   Name = "Fly Gui V3",
   Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
   end
})

MiscTab:CreateButton({
   Name = "Infinite Yield",
   Callback = function()
      loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end
})
